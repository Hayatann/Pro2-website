---
import DefaultLayout from '../layouts/DefaultLayout.astro'
import Hero from '../components/Hero.astro'
import Feature from '../components/Feature.astro'
import Counter from '../components/Counter.astro'
import ContentMedia from '../components/ContentMedia.astro'
import VideoPlayer from '../components/VideoPlayer.astro'
---

<DefaultLayout title="Home">
  <Hero />
  <section class="my-64">
    <div class="container">
      <h2 class="mb-16 text-6xl">使用技術</h2>
      <div class="grid grid-cols-1 gap-12 md:grid-cols-2 lg:grid-cols-3">
        <Feature icon="flutter" title="Flutter" iconUrl="https://flutter.dev/">
          基本的にはFlutterを利用しモバイルアプリとして開発をしました。
        </Feature>
        <Feature icon="mdi:database" title="SQLite" iconUrl="https://pub.dev/packages/sqflite">
          ローカルにデータを保存したかったので，データベースにはSQLiteを採用しました。
        </Feature>
        <Feature icon="mdi:state-machine" title="Riverpod" iconUrl="https://riverpod.dev/ja/">
          各Widget間の状態管理にはRiverpodを使用しました。<s>StatefulWidgetが使いにくい</s>
        </Feature>
        <Feature icon="mdi:webhook" title="flutter_hooks" iconUrl="https://pub.dev/packages/flutter_hooks">
          Widget内部の状態管理にはflutter_hooksを使用しました。Reactとかと似たような感じで使えたので扱いやすかったです。
        </Feature>
      </div>
    </div>
  </section>
  <VideoPlayer src="/pro2Movie.mp4">
    <h2>実際の動作</h2>
    <p class="text-2xl">
      ホーム画面ではの支出のタイトル，ジャンル，日付を入力できます。
      登録ボタンを押し，記録画面に移ると，支出のグラフが円グラフとして表示されます。
      また，カード形式でその支出が確認可能です。
      もちろんデータはデバイス上に保存されアプリを閉じても保持されます。
    </p>
  </VideoPlayer>
  <section class="mt-64 mb-32">
    <div class="container">
      <h2 class="mb-16 text-6xl">Counters</h2>
      <div class="grid grid-cols-1 gap-12 sm:grid-cols-2 md:grid-cols-2">
        <Counter count="5" title="Hours" sub="かかった時間" />
        <Counter count="7" title="Commits" sub="Merged" />
      </div>
    </div>
  </section>
</DefaultLayout>
